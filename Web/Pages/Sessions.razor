@page "/sessions"
@using EventRegistration.Data
@using EventModels
@using System.Diagnostics
@inject SessionService SessionService

@if (sessions == null)
{
    <p><em>Roading...</em></p>
}
else
{
    <h3>Sessions</h3>
    <table class="table">
        <thead>
            <tr>
                <th>Day</th>
                <th>Title</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var session in sessions)
            {
            <tr>
                <td><button class="btn btn-primary" @onclick="e => DeleteSession(e, session.Id)">Delete Session</button></td>
                <td>@session.Day</td>
                <td>@session.Title</td>
                <td>@session.Description</td>
                @*You caint use the plain attribute data-toggle way*@
                @* HtmlHelper.InvokeComponent or something like that *@
                @*(await Html.RenderComponentAsync()) href="/SimpleSessionForm/@session.Id.ToString()"*@
                @*<td><button class="btn btn-primary btn-sm" @onclick="e => await Html.RenderComponentAsync<SimpleSessionForm>(session.Id)">Edit</button></td>*@
                @*<td><button class="btn btn-primary btn-sm" @onclick="e => EditSession(e, session.Id)">Edit</button></td>*@
            </tr>
            }
        </tbody>
    </table>
    <div>
        <button class="btn btn-primary" @onclick="DeleteAll">Delete all Sessions</button>
    </div>
}

@code {
    List<Session> sessions;
    int editSessionId = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadSessions(true);
    }

    async Task DeleteAll(MouseEventArgs e)
    {
        await SessionService.DeleteAllSessions();
        await LoadSessions(false);
    }

    void EditSession(MouseEventArgs e, int id)
    {
        // RESUME: https://stackoverflow.com/questions/57733416/cant-render-blazor-component
        // resume in sample project
        // Back in other sample project; this is very hard.
        //Microsoft.AspNetCore.Html.
        //HtmlRenderer.r
        //await Html.RenderComponentAsync<SimpleSessionForm>(id.ToString());
    }

    async Task DeleteSession(MouseEventArgs e, int id)
    {
        await SessionService.DeleteSession(id);
        // Note that each time I call this, something is watching it (not sure how that mechanism works), and the UI is updated
        await LoadSessions(false);
    }

    async Task LoadSessions(bool createNew = true)
    {
        sessions = await SessionService.GetAllSessions(createNew);
    }
}
