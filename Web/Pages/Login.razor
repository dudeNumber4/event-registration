@page "/login"
@using EventRegistration.Services
@using EventRegistration.ViewModels
@inject RegistrantService RegistrantService
@inject NavigationManager NavigationManager

@*I couldn't get the built in validation components to work here*@
<EditForm class="form-group" Model="model">
    @*<ValidationMessage For="@(() => model.ValidationMsg)" />*@
    <div class="container">
        <div class="row row-padding">
            <label for="exampleInputEmail1">Email address</label>
            <InputText id="email" type="email" class="form-control" placeholder="Enter email" @bind-Value="model.Email"></InputText>
        </div>
        <div class="row row-padding">
            <button class="btn btn-primary" @onclick="@(() => LoginYo())">Submit</button>
        </div>
        <div class="row row-padding">
            @if (!string.IsNullOrEmpty(model.ValidationMsg))
            {
                <div class="alert alert-warning" role="alert">
                    @model.ValidationMsg
                </div>
            }
        </div>
    </div>
</EditForm>

@code {
    private LoginViewModel model;
    //private EditContext editContext;

    async void LoginYo()
    {
        if (await model.RegistrantExists())
        {
            RegistrantService.CurrentRegistrant = model.Registrant;
            //if (await model.RegistrationExists())
            //{
            //    NavigationManager.NavigateTo($"itinerary/{model.Registrant.Id}");
            //}
            //else
            //{
            //    NavigationManager.NavigateTo($"edit-registration/{model.Registrant.Id}");
            //}
        }
        else
        {
            model.ValidationMsg = "Registrant not found.";
        }
    }

    protected override void OnInitialized()
    {
        model = new(RegistrantService);
        //editContext = new(model);
    }
}